#!/bin/bash

v_backups=/var/lib/borg/backups
v_entrypts=/docker-entrypoint-initdb.d
v_entrypts_tmp=/docker-entrypoint-initdb.d-tmp/

function setLocaleAndTZ {
	echo "Set locale to ${LANG}"	
	local LANG1=$( echo "$LANG" | awk -F "." '{ print $1 }' )
	local ENCODING=$( echo "$LANG" | awk -F "." '{ print $2 }' )
	egrep "^($LANG1)?(\.$ENCODING)?[[:space:]]+$ENCODING$" /usr/share/i18n/SUPPORTED > /etc/locale.gen
	if ! locale-gen; then
		echo "Error generating locale!"
		exit 1
	fi

	echo "Set timezone to ${AREA}/${ZONE}"
	ZONEINFO_FILE='/usr/share/zoneinfo/'"${AREA}"'/'"${ZONE}"
	ln --force --symbolic "${ZONEINFO_FILE}" '/etc/localtime'
	if ! dpkg-reconfigure --frontend=noninteractive tzdata; then
		echo "Error configuring timezone!"
		exit 1
	fi
}

function clean-data-volume {
	[[ -n $DATA_VOL ]] && rm -rf "$DATA_VOL/*"
}

function set_folders {
	# Postgres folders
	mkdir -p "$PGDATA" "$WAL_DIR"
	chmod -R 700 "$PGDATA" "$WAL_DIR" 
	chown -R postgres:postgres "$PGDATA" "$WAL_DIR"
	# Scripts access rights
	chmod +x /usr/local/bin/*
	# Borg repo init
	borg init
}

function main {
	set_folders
	case $1 in
		postgres )	
			# Configuration of Timezone and locale BEFORE initdb
			setLocaleAndTZ
			# Init cluster if needed
			if [[ ! -s "$PGDATA/PG_VERSION" ]]; then
				echo "Postgres cluster not initialized yet!"
				#Move the cluster configuration script (WAL archiving...) to $v_entrypts
				cp "$v_entrypts_tmp/*" "$v_entrypts/"
				chown -R postgres:postgres "$v_entrypts" \
					&& chmod -R 770 "$v_entrypts" \
					&& echo "$v_entrypts/00_config-cluster.sh will be run after initdb"
				# Using original docker-entrypoint for standard settings
				if ! check-initdb postgres ; then
					echo "error during check-initdb!"
					exit 1
				else
					borg create --info --show-rc --stats --progress --compression lz4 "INIT" "$v_entrypts/" && rm $v_entrypts/* || echo "error archiving init scripts!"
				fi
			fi
			echo "Starting..."
			exec gosu postgres "$@"
			;;
		restore )
			shift
			exec borg_restore "$@"
			;;
		clean-data )
			clean-data-volume
			;;
		help )
			echo "--  Initialization     :"
			# TODO: HELP
			exit 0
			;;
		* )
			exec "$@"
			;;
	esac
}

main "$@"